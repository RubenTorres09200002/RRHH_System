{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ruben Torres\\\\RiderProjects\\\\RRHH_System\\\\src\\\\VerFuncionarios.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './components/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VerFuncionarios = () => {\n  _s();\n  const [funcionarios, setFuncionarios] = useState([]);\n  useEffect(() => {\n    const fetchFuncionarios = async () => {\n      try {\n        const response = await axios.get('/api/funcionarios');\n        setFuncionarios(response.data);\n      } catch (error) {\n        console.error(\"Error al obtener los funcionarios:\", error);\n      }\n    };\n    fetchFuncionarios();\n  }, []);\n  const formatFechaNacimiento = fecha => {\n    const date = new Date(fecha);\n    const dia = String(date.getDate()).padStart(2, '0'); // Obtener el día y agregar ceros a la izquierda\n    const mes = String(date.getMonth() + 1).padStart(2, '0'); // Obtener el mes y agregar ceros a la izquierda\n    const anio = date.getFullYear(); // Obtener el año\n\n    return `${dia}/${mes}/${anio}`; // Formato DD/MM/YYYY\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Lista de Funcionarios\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Nombres\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Apellidos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"C\\xE9dula\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Fecha de Nacimiento\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: funcionarios.map(funcionario => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: funcionario.nombres\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: funcionario.apellidos\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: funcionario.cedula\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatFechaNacimiento(funcionario.fechaNacimiento)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), \" \"]\n        }, funcionario.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(VerFuncionarios, \"C2qvOBZGUl6ifuezZEm7TBYrGPA=\");\n_c = VerFuncionarios;\nexport default VerFuncionarios;\nvar _c;\n$RefreshReg$(_c, \"VerFuncionarios\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","VerFuncionarios","_s","funcionarios","setFuncionarios","fetchFuncionarios","response","get","data","error","console","formatFechaNacimiento","fecha","date","Date","dia","String","getDate","padStart","mes","getMonth","anio","getFullYear","children","fileName","_jsxFileName","lineNumber","columnNumber","map","funcionario","nombres","apellidos","cedula","fechaNacimiento","id","_c","$RefreshReg$"],"sources":["C:/Users/Ruben Torres/RiderProjects/RRHH_System/src/VerFuncionarios.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './components/App.css';\r\n\r\nconst VerFuncionarios = () => {\r\n    const [funcionarios, setFuncionarios] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchFuncionarios = async () => {\r\n            try {\r\n                const response = await axios.get('/api/funcionarios');\r\n                setFuncionarios(response.data);\r\n            } catch (error) {\r\n                console.error(\"Error al obtener los funcionarios:\", error);\r\n            }\r\n        };\r\n        fetchFuncionarios();\r\n    }, []);\r\n\r\n    const formatFechaNacimiento = (fecha) => {\r\n        const date = new Date(fecha);\r\n        const dia = String(date.getDate()).padStart(2, '0'); // Obtener el día y agregar ceros a la izquierda\r\n        const mes = String(date.getMonth() + 1).padStart(2, '0'); // Obtener el mes y agregar ceros a la izquierda\r\n        const anio = date.getFullYear(); // Obtener el año\r\n\r\n        return `${dia}/${mes}/${anio}`; // Formato DD/MM/YYYY\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Lista de Funcionarios</h2>\r\n            <table>\r\n                <thead>\r\n                <tr>\r\n                    <th>Nombres</th>\r\n                    <th>Apellidos</th>\r\n                    <th>Cédula</th>\r\n                    <th>Fecha de Nacimiento</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {funcionarios.map(funcionario => (\r\n                    <tr key={funcionario.id}>\r\n                        <td>{funcionario.nombres}</td>\r\n                        <td>{funcionario.apellidos}</td>\r\n                        <td>{funcionario.cedula}</td>\r\n                        <td>{formatFechaNacimiento(funcionario.fechaNacimiento)}</td> {/* Llamada a la función para formatear la fecha */}\r\n                    </tr>\r\n                ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default VerFuncionarios;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
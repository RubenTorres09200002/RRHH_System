{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ruben Torres\\\\RiderProjects\\\\RRHH_System\\\\src\\\\RegistrarEntradaSalida.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './components/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.baseURL = 'http://localhost:5187';\nconst RegistrarEntradaSalida = () => {\n  _s();\n  const [funcionarios, setFuncionarios] = useState([]);\n  const [selectedFuncionario, setSelectedFuncionario] = useState('');\n  const [fecha, setFecha] = useState('');\n  const [horaEntrada, setHoraEntrada] = useState('');\n  const [horaSalida, setHoraSalida] = useState('');\n  const [error, setError] = useState('');\n  const [successMessage, setSuccessMessage] = useState(''); // Estado para el mensaje de éxito\n\n  useEffect(() => {\n    fetchFuncionarios();\n  }, []);\n  const fetchFuncionarios = async () => {\n    try {\n      const response = await axios.get('/api/funcionarios');\n      setFuncionarios(response.data);\n    } catch (error) {\n      console.error(\"Error fetching funcionarios:\", error);\n      setError('Error al obtener los funcionarios.');\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(''); // Reset error message\n    setSuccessMessage(''); // Reset success message\n\n    if (!selectedFuncionario || !fecha || !horaEntrada || !horaSalida) {\n      setError('Todos los campos son obligatorios.');\n      return;\n    }\n\n    // Agregar segundos a las horas\n    const nuevoRegistro = {\n      funcionarioId: selectedFuncionario,\n      fecha,\n      horaEntrada: `${horaEntrada}:00`,\n      // Añadir segundos\n      horaSalida: `${horaSalida}:00` // Añadir segundos\n    };\n    try {\n      await axios.post('/api/registros', nuevoRegistro);\n      // Limpiar los campos después del registro\n      setSelectedFuncionario('');\n      setFecha('');\n      setHoraEntrada('');\n      setHoraSalida('');\n      // Establecer mensaje de éxito\n      setSuccessMessage('Registro de entrada y salida registrado exitosamente.');\n    } catch (error) {\n      console.error(\"Error registrando entrada/salida:\", error);\n      // Capturar el mensaje de error del controlador\n      if (error.response && error.response.data) {\n        setError(error.response.data); // Mostrar el mensaje específico del error\n      } else {\n        setError('Error al registrar la entrada/salida.'); // Mensaje genérico si no se recibe respuesta\n      }\n    }\n  };\n  const handleFuncionarioChange = e => {\n    setSelectedFuncionario(e.target.value);\n    setError(''); // Limpiar mensaje de error al seleccionar un funcionario\n    setSuccessMessage(''); // Limpiar mensaje de éxito al seleccionar un funcionario\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Registrar Entrada y Salida\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 23\n    }, this), \" \", successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"success\",\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 32\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedFuncionario,\n        onChange: handleFuncionarioChange,\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Seleccionar Funcionario\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), funcionarios.map(funcionario => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: funcionario.id,\n          children: [funcionario.nombres, \" \", funcionario.apellidos]\n        }, funcionario.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: fecha,\n        onChange: e => setFecha(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"time\",\n        value: horaEntrada,\n        onChange: e => setHoraEntrada(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"time\",\n        value: horaSalida,\n        onChange: e => setHoraSalida(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Registrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n_s(RegistrarEntradaSalida, \"+rxc3BIygaVn9U0CZJk2qwvR2I0=\");\n_c = RegistrarEntradaSalida;\nexport default RegistrarEntradaSalida;\nvar _c;\n$RefreshReg$(_c, \"RegistrarEntradaSalida\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","defaults","baseURL","RegistrarEntradaSalida","_s","funcionarios","setFuncionarios","selectedFuncionario","setSelectedFuncionario","fecha","setFecha","horaEntrada","setHoraEntrada","horaSalida","setHoraSalida","error","setError","successMessage","setSuccessMessage","fetchFuncionarios","response","get","data","console","handleSubmit","e","preventDefault","nuevoRegistro","funcionarioId","post","handleFuncionarioChange","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","required","map","funcionario","id","nombres","apellidos","type","_c","$RefreshReg$"],"sources":["C:/Users/Ruben Torres/RiderProjects/RRHH_System/src/RegistrarEntradaSalida.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './components/App.css';\r\n\r\naxios.defaults.baseURL = 'http://localhost:5187';\r\n\r\nconst RegistrarEntradaSalida = () => {\r\n    const [funcionarios, setFuncionarios] = useState([]);\r\n    const [selectedFuncionario, setSelectedFuncionario] = useState('');\r\n    const [fecha, setFecha] = useState('');\r\n    const [horaEntrada, setHoraEntrada] = useState('');\r\n    const [horaSalida, setHoraSalida] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [successMessage, setSuccessMessage] = useState(''); // Estado para el mensaje de éxito\r\n\r\n    useEffect(() => {\r\n        fetchFuncionarios();\r\n    }, []);\r\n\r\n    const fetchFuncionarios = async () => {\r\n        try {\r\n            const response = await axios.get('/api/funcionarios');\r\n            setFuncionarios(response.data);\r\n        } catch (error) {\r\n            console.error(\"Error fetching funcionarios:\", error);\r\n            setError('Error al obtener los funcionarios.');\r\n        }\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setError(''); // Reset error message\r\n        setSuccessMessage(''); // Reset success message\r\n\r\n        if (!selectedFuncionario || !fecha || !horaEntrada || !horaSalida) {\r\n            setError('Todos los campos son obligatorios.');\r\n            return;\r\n        }\r\n\r\n        // Agregar segundos a las horas\r\n        const nuevoRegistro = {\r\n            funcionarioId: selectedFuncionario,\r\n            fecha,\r\n            horaEntrada: `${horaEntrada}:00`, // Añadir segundos\r\n            horaSalida: `${horaSalida}:00` // Añadir segundos\r\n        };\r\n\r\n        try {\r\n            await axios.post('/api/registros', nuevoRegistro);\r\n            // Limpiar los campos después del registro\r\n            setSelectedFuncionario('');\r\n            setFecha('');\r\n            setHoraEntrada('');\r\n            setHoraSalida('');\r\n            // Establecer mensaje de éxito\r\n            setSuccessMessage('Registro de entrada y salida registrado exitosamente.');\r\n        } catch (error) {\r\n            console.error(\"Error registrando entrada/salida:\", error);\r\n            // Capturar el mensaje de error del controlador\r\n            if (error.response && error.response.data) {\r\n                setError(error.response.data); // Mostrar el mensaje específico del error\r\n            } else {\r\n                setError('Error al registrar la entrada/salida.'); // Mensaje genérico si no se recibe respuesta\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleFuncionarioChange = (e) => {\r\n        setSelectedFuncionario(e.target.value);\r\n        setError(''); // Limpiar mensaje de error al seleccionar un funcionario\r\n        setSuccessMessage(''); // Limpiar mensaje de éxito al seleccionar un funcionario\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\"> {/* Agrega la clase container aquí */}\r\n            <h1>Registrar Entrada y Salida</h1>\r\n            {error && <p className=\"error\">{error}</p>} {/* Aplica la clase error */}\r\n            {successMessage && <p className=\"success\">{successMessage}</p>} {/* Aplica la clase success */}\r\n            <form onSubmit={handleSubmit}>\r\n                <select value={selectedFuncionario} onChange={handleFuncionarioChange} required>\r\n                    <option value=\"\">Seleccionar Funcionario</option>\r\n                    {funcionarios.map(funcionario => (\r\n                        <option key={funcionario.id} value={funcionario.id}>\r\n                            {funcionario.nombres} {funcionario.apellidos}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n\r\n                <input\r\n                    type=\"date\"\r\n                    value={fecha}\r\n                    onChange={e => setFecha(e.target.value)}\r\n                    required\r\n                />\r\n                <input\r\n                    type=\"time\"\r\n                    value={horaEntrada}\r\n                    onChange={e => setHoraEntrada(e.target.value)}\r\n                    required\r\n                />\r\n                <input\r\n                    type=\"time\"\r\n                    value={horaSalida}\r\n                    onChange={e => setHoraSalida(e.target.value)}\r\n                    required\r\n                />\r\n                <button type=\"submit\">Registrar</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RegistrarEntradaSalida;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
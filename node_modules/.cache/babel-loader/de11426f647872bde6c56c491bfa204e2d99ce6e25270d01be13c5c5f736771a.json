{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import'./components/App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";axios.defaults.baseURL='http://localhost:5187';const RegistrarEntradaSalida=()=>{const[funcionarios,setFuncionarios]=useState([]);const[selectedFuncionario,setSelectedFuncionario]=useState('');const[fecha,setFecha]=useState('');const[horaEntrada,setHoraEntrada]=useState('');const[horaSalida,setHoraSalida]=useState('');const[error,setError]=useState('');const[successMessage,setSuccessMessage]=useState('');// Estado para el mensaje de éxito\nuseEffect(()=>{fetchFuncionarios();},[]);const fetchFuncionarios=async()=>{try{const response=await axios.get('/api/funcionarios');setFuncionarios(response.data);}catch(error){console.error(\"Error fetching funcionarios:\",error);setError('Error al obtener los funcionarios.');}};const handleSubmit=async e=>{e.preventDefault();setError('');// Reset error message\nsetSuccessMessage('');// Reset success message\nif(!selectedFuncionario||!fecha||!horaEntrada||!horaSalida){setError('Todos los campos son obligatorios.');return;}// Agregar segundos a las horas\nconst nuevoRegistro={funcionarioId:selectedFuncionario,fecha,horaEntrada:`${horaEntrada}:00`,// Añadir segundos\nhoraSalida:`${horaSalida}:00`// Añadir segundos\n};try{await axios.post('/api/registros',nuevoRegistro);// Limpiar los campos después del registro\nsetSelectedFuncionario('');setFecha('');setHoraEntrada('');setHoraSalida('');// Establecer mensaje de éxito\nsetSuccessMessage('Registro de entrada y salida registrado exitosamente.');}catch(error){console.error(\"Error registrando entrada/salida:\",error);// Capturar el mensaje de error del controlador\nif(error.response&&error.response.data){setError(error.response.data);// Mostrar el mensaje específico del error\n}else{setError('Error al registrar la entrada/salida.');// Mensaje genérico si no se recibe respuesta\n}}};const handleFuncionarioChange=e=>{setSelectedFuncionario(e.target.value);setError('');// Limpiar mensaje de error al seleccionar un funcionario\nsetSuccessMessage('');// Limpiar mensaje de éxito al seleccionar un funcionario\n};return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[\" \",/*#__PURE__*/_jsx(\"h1\",{children:\"Registrar Entrada y Salida\"}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"error\",children:error}),\" \",successMessage&&/*#__PURE__*/_jsx(\"p\",{className:\"success\",children:successMessage}),\" \",/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"select\",{value:selectedFuncionario,onChange:handleFuncionarioChange,required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Seleccionar Funcionario\"}),funcionarios.map(funcionario=>/*#__PURE__*/_jsxs(\"option\",{value:funcionario.id,children:[funcionario.nombres,\" \",funcionario.apellidos]},funcionario.id))]}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:fecha,onChange:e=>setFecha(e.target.value),required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"time\",value:horaEntrada,onChange:e=>setHoraEntrada(e.target.value),required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"time\",value:horaSalida,onChange:e=>setHoraSalida(e.target.value),required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Registrar\"})]})]});};export default RegistrarEntradaSalida;","map":{"version":3,"names":["React","useState","useEffect","axios","jsx","_jsx","jsxs","_jsxs","defaults","baseURL","RegistrarEntradaSalida","funcionarios","setFuncionarios","selectedFuncionario","setSelectedFuncionario","fecha","setFecha","horaEntrada","setHoraEntrada","horaSalida","setHoraSalida","error","setError","successMessage","setSuccessMessage","fetchFuncionarios","response","get","data","console","handleSubmit","e","preventDefault","nuevoRegistro","funcionarioId","post","handleFuncionarioChange","target","value","className","children","onSubmit","onChange","required","map","funcionario","id","nombres","apellidos","type"],"sources":["C:/Users/Ruben Torres/RiderProjects/RRHH_System/src/RegistrarEntradaSalida.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './components/App.css';\r\n\r\naxios.defaults.baseURL = 'http://localhost:5187';\r\n\r\nconst RegistrarEntradaSalida = () => {\r\n    const [funcionarios, setFuncionarios] = useState([]);\r\n    const [selectedFuncionario, setSelectedFuncionario] = useState('');\r\n    const [fecha, setFecha] = useState('');\r\n    const [horaEntrada, setHoraEntrada] = useState('');\r\n    const [horaSalida, setHoraSalida] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [successMessage, setSuccessMessage] = useState(''); // Estado para el mensaje de éxito\r\n\r\n    useEffect(() => {\r\n        fetchFuncionarios();\r\n    }, []);\r\n\r\n    const fetchFuncionarios = async () => {\r\n        try {\r\n            const response = await axios.get('/api/funcionarios');\r\n            setFuncionarios(response.data);\r\n        } catch (error) {\r\n            console.error(\"Error fetching funcionarios:\", error);\r\n            setError('Error al obtener los funcionarios.');\r\n        }\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setError(''); // Reset error message\r\n        setSuccessMessage(''); // Reset success message\r\n\r\n        if (!selectedFuncionario || !fecha || !horaEntrada || !horaSalida) {\r\n            setError('Todos los campos son obligatorios.');\r\n            return;\r\n        }\r\n\r\n        // Agregar segundos a las horas\r\n        const nuevoRegistro = {\r\n            funcionarioId: selectedFuncionario,\r\n            fecha,\r\n            horaEntrada: `${horaEntrada}:00`, // Añadir segundos\r\n            horaSalida: `${horaSalida}:00` // Añadir segundos\r\n        };\r\n\r\n        try {\r\n            await axios.post('/api/registros', nuevoRegistro);\r\n            // Limpiar los campos después del registro\r\n            setSelectedFuncionario('');\r\n            setFecha('');\r\n            setHoraEntrada('');\r\n            setHoraSalida('');\r\n            // Establecer mensaje de éxito\r\n            setSuccessMessage('Registro de entrada y salida registrado exitosamente.');\r\n        } catch (error) {\r\n            console.error(\"Error registrando entrada/salida:\", error);\r\n            // Capturar el mensaje de error del controlador\r\n            if (error.response && error.response.data) {\r\n                setError(error.response.data); // Mostrar el mensaje específico del error\r\n            } else {\r\n                setError('Error al registrar la entrada/salida.'); // Mensaje genérico si no se recibe respuesta\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleFuncionarioChange = (e) => {\r\n        setSelectedFuncionario(e.target.value);\r\n        setError(''); // Limpiar mensaje de error al seleccionar un funcionario\r\n        setSuccessMessage(''); // Limpiar mensaje de éxito al seleccionar un funcionario\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\"> {/* Agrega la clase container aquí */}\r\n            <h1>Registrar Entrada y Salida</h1>\r\n            {error && <p className=\"error\">{error}</p>} {/* Aplica la clase error */}\r\n            {successMessage && <p className=\"success\">{successMessage}</p>} {/* Aplica la clase success */}\r\n            <form onSubmit={handleSubmit}>\r\n                <select value={selectedFuncionario} onChange={handleFuncionarioChange} required>\r\n                    <option value=\"\">Seleccionar Funcionario</option>\r\n                    {funcionarios.map(funcionario => (\r\n                        <option key={funcionario.id} value={funcionario.id}>\r\n                            {funcionario.nombres} {funcionario.apellidos}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n\r\n                <input\r\n                    type=\"date\"\r\n                    value={fecha}\r\n                    onChange={e => setFecha(e.target.value)}\r\n                    required\r\n                />\r\n                <input\r\n                    type=\"time\"\r\n                    value={horaEntrada}\r\n                    onChange={e => setHoraEntrada(e.target.value)}\r\n                    required\r\n                />\r\n                <input\r\n                    type=\"time\"\r\n                    value={horaSalida}\r\n                    onChange={e => setHoraSalida(e.target.value)}\r\n                    required\r\n                />\r\n                <button type=\"submit\">Registrar</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RegistrarEntradaSalida;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,MAAO,sBAAsB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE9BJ,KAAK,CAACK,QAAQ,CAACC,OAAO,CAAG,uBAAuB,CAEhD,KAAM,CAAAC,sBAAsB,CAAGA,CAAA,GAAM,CACjC,KAAM,CAACC,YAAY,CAAEC,eAAe,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CACpD,KAAM,CAACY,mBAAmB,CAAEC,sBAAsB,CAAC,CAAGb,QAAQ,CAAC,EAAE,CAAC,CAClE,KAAM,CAACc,KAAK,CAAEC,QAAQ,CAAC,CAAGf,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACgB,WAAW,CAAEC,cAAc,CAAC,CAAGjB,QAAQ,CAAC,EAAE,CAAC,CAClD,KAAM,CAACkB,UAAU,CAAEC,aAAa,CAAC,CAAGnB,QAAQ,CAAC,EAAE,CAAC,CAChD,KAAM,CAACoB,KAAK,CAAEC,QAAQ,CAAC,CAAGrB,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACsB,cAAc,CAAEC,iBAAiB,CAAC,CAAGvB,QAAQ,CAAC,EAAE,CAAC,CAAE;AAE1DC,SAAS,CAAC,IAAM,CACZuB,iBAAiB,CAAC,CAAC,CACvB,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAA,iBAAiB,CAAG,KAAAA,CAAA,GAAY,CAClC,GAAI,CACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAvB,KAAK,CAACwB,GAAG,CAAC,mBAAmB,CAAC,CACrDf,eAAe,CAACc,QAAQ,CAACE,IAAI,CAAC,CAClC,CAAE,MAAOP,KAAK,CAAE,CACZQ,OAAO,CAACR,KAAK,CAAC,8BAA8B,CAAEA,KAAK,CAAC,CACpDC,QAAQ,CAAC,oCAAoC,CAAC,CAClD,CACJ,CAAC,CAED,KAAM,CAAAQ,YAAY,CAAG,KAAO,CAAAC,CAAC,EAAK,CAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClBV,QAAQ,CAAC,EAAE,CAAC,CAAE;AACdE,iBAAiB,CAAC,EAAE,CAAC,CAAE;AAEvB,GAAI,CAACX,mBAAmB,EAAI,CAACE,KAAK,EAAI,CAACE,WAAW,EAAI,CAACE,UAAU,CAAE,CAC/DG,QAAQ,CAAC,oCAAoC,CAAC,CAC9C,OACJ,CAEA;AACA,KAAM,CAAAW,aAAa,CAAG,CAClBC,aAAa,CAAErB,mBAAmB,CAClCE,KAAK,CACLE,WAAW,CAAE,GAAGA,WAAW,KAAK,CAAE;AAClCE,UAAU,CAAE,GAAGA,UAAU,KAAM;AACnC,CAAC,CAED,GAAI,CACA,KAAM,CAAAhB,KAAK,CAACgC,IAAI,CAAC,gBAAgB,CAAEF,aAAa,CAAC,CACjD;AACAnB,sBAAsB,CAAC,EAAE,CAAC,CAC1BE,QAAQ,CAAC,EAAE,CAAC,CACZE,cAAc,CAAC,EAAE,CAAC,CAClBE,aAAa,CAAC,EAAE,CAAC,CACjB;AACAI,iBAAiB,CAAC,uDAAuD,CAAC,CAC9E,CAAE,MAAOH,KAAK,CAAE,CACZQ,OAAO,CAACR,KAAK,CAAC,mCAAmC,CAAEA,KAAK,CAAC,CACzD;AACA,GAAIA,KAAK,CAACK,QAAQ,EAAIL,KAAK,CAACK,QAAQ,CAACE,IAAI,CAAE,CACvCN,QAAQ,CAACD,KAAK,CAACK,QAAQ,CAACE,IAAI,CAAC,CAAE;AACnC,CAAC,IAAM,CACHN,QAAQ,CAAC,uCAAuC,CAAC,CAAE;AACvD,CACJ,CACJ,CAAC,CAED,KAAM,CAAAc,uBAAuB,CAAIL,CAAC,EAAK,CACnCjB,sBAAsB,CAACiB,CAAC,CAACM,MAAM,CAACC,KAAK,CAAC,CACtChB,QAAQ,CAAC,EAAE,CAAC,CAAE;AACdE,iBAAiB,CAAC,EAAE,CAAC,CAAE;AAC3B,CAAC,CAED,mBACIjB,KAAA,QAAKgC,SAAS,CAAC,WAAW,CAAAC,QAAA,EAAC,GAAC,cACxBnC,IAAA,OAAAmC,QAAA,CAAI,4BAA0B,CAAI,CAAC,CAClCnB,KAAK,eAAIhB,IAAA,MAAGkC,SAAS,CAAC,OAAO,CAAAC,QAAA,CAAEnB,KAAK,CAAI,CAAC,CAAC,GAAC,CAC3CE,cAAc,eAAIlB,IAAA,MAAGkC,SAAS,CAAC,SAAS,CAAAC,QAAA,CAAEjB,cAAc,CAAI,CAAC,CAAC,GAAC,cAChEhB,KAAA,SAAMkC,QAAQ,CAAEX,YAAa,CAAAU,QAAA,eACzBjC,KAAA,WAAQ+B,KAAK,CAAEzB,mBAAoB,CAAC6B,QAAQ,CAAEN,uBAAwB,CAACO,QAAQ,MAAAH,QAAA,eAC3EnC,IAAA,WAAQiC,KAAK,CAAC,EAAE,CAAAE,QAAA,CAAC,yBAAuB,CAAQ,CAAC,CAChD7B,YAAY,CAACiC,GAAG,CAACC,WAAW,eACzBtC,KAAA,WAA6B+B,KAAK,CAAEO,WAAW,CAACC,EAAG,CAAAN,QAAA,EAC9CK,WAAW,CAACE,OAAO,CAAC,GAAC,CAACF,WAAW,CAACG,SAAS,GADnCH,WAAW,CAACC,EAEjB,CACX,CAAC,EACE,CAAC,cAETzC,IAAA,UACI4C,IAAI,CAAC,MAAM,CACXX,KAAK,CAAEvB,KAAM,CACb2B,QAAQ,CAAEX,CAAC,EAAIf,QAAQ,CAACe,CAAC,CAACM,MAAM,CAACC,KAAK,CAAE,CACxCK,QAAQ,MACX,CAAC,cACFtC,IAAA,UACI4C,IAAI,CAAC,MAAM,CACXX,KAAK,CAAErB,WAAY,CACnByB,QAAQ,CAAEX,CAAC,EAAIb,cAAc,CAACa,CAAC,CAACM,MAAM,CAACC,KAAK,CAAE,CAC9CK,QAAQ,MACX,CAAC,cACFtC,IAAA,UACI4C,IAAI,CAAC,MAAM,CACXX,KAAK,CAAEnB,UAAW,CAClBuB,QAAQ,CAAEX,CAAC,EAAIX,aAAa,CAACW,CAAC,CAACM,MAAM,CAACC,KAAK,CAAE,CAC7CK,QAAQ,MACX,CAAC,cACFtC,IAAA,WAAQ4C,IAAI,CAAC,QAAQ,CAAAT,QAAA,CAAC,WAAS,CAAQ,CAAC,EACtC,CAAC,EACN,CAAC,CAEd,CAAC,CAED,cAAe,CAAA9B,sBAAsB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
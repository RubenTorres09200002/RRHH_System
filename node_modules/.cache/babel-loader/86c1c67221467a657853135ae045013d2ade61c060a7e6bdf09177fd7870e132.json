{"ast":null,"code":"import React,{useEffect,useState}from'react';import axios from'axios';import'./components/App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Reportes=()=>{const[funcionarios,setFuncionarios]=useState([]);const[selectedFuncionario,setSelectedFuncionario]=useState('');const[fechaDesde,setFechaDesde]=useState('');const[fechaHasta,setFechaHasta]=useState('');const[reportes,setReportes]=useState([]);const[error,setError]=useState('');const[successMessage,setSuccessMessage]=useState('');useEffect(()=>{const fetchFuncionarios=async()=>{try{const response=await axios.get('/api/funcionarios');setFuncionarios(response.data);}catch(error){console.error(\"Error al obtener los funcionarios:\",error);setError('Error al obtener los funcionarios.');}};fetchFuncionarios();},[]);const handleSubmit=async e=>{e.preventDefault();setError('');// Limpiar mensaje de error\nsetSuccessMessage('');// Limpiar mensaje de éxito\n// Limpiar los reportes anteriores\nsetReportes([]);if(!selectedFuncionario||!fechaDesde||!fechaHasta){setError('Todos los campos son obligatorios.');return;}// Convertir las fechas a objetos Date\nconst desde=new Date(fechaDesde);const hasta=new Date(fechaHasta);// Asegúrate de que las fechas no se inviertan\nif(desde>hasta){setError('La fecha \"desde\" debe ser anterior a la fecha \"hasta\".');return;}// Ajustar las fechas para la consulta\nconst fechaDesdeISO=new Date(desde.setHours(0,0,0,0)).toISOString();// Iniciar el día\nconst fechaHastaISO=new Date(hasta.getFullYear(),hasta.getMonth(),hasta.getDate(),23,59,59,999).toISOString();// Terminar el día\nconsole.log(\"Fecha desde:\",fechaDesdeISO);// Para depuración\nconsole.log(\"Fecha hasta:\",fechaHastaISO);// Para depuración\ntry{const response=await axios.get(`/api/reportes/${selectedFuncionario}`,{params:{desde:fechaDesdeISO,hasta:fechaHastaISO}});setReportes(response.data);setSuccessMessage('Reporte generado exitosamente.');// Establecer mensaje de éxito\n}catch(error){console.error(\"Error obteniendo reportes:\",error);// Captura el mensaje de error del backend\nif(error.response&&error.response.data){setError(error.response.data);// Mostrar el mensaje de error proporcionado por el backend\n}else{setError('Error al obtener los reportes.');// Mensaje genérico en caso de error inesperado\n}}};const calcularHorasTrabajadas=(horaEntrada,horaSalida)=>{const entrada=new Date(`1970-01-01T${horaEntrada}Z`);const salida=new Date(`1970-01-01T${horaSalida}Z`);const diff=(salida-entrada)/1000/3600;// Diferencia en horas\nreturn diff>0?diff.toFixed(2):0;// Retornar horas trabajadas\n};const handleFuncionarioChange=e=>{setSelectedFuncionario(e.target.value);setError('');// Limpiar mensaje de error al seleccionar un funcionario\nsetSuccessMessage('');// Limpiar mensaje de éxito al seleccionar un funcionario\nsetReportes([]);// Limpiar reportes al seleccionar un funcionario\n};return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[\" \",/*#__PURE__*/_jsx(\"h2\",{children:\"Reportes de Entrada y Salida\"}),error&&/*#__PURE__*/_jsx(\"p\",{style:{color:'red'},children:error}),\" \",successMessage&&/*#__PURE__*/_jsx(\"p\",{style:{color:'green'},children:successMessage}),\" \",/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"select\",{value:selectedFuncionario,onChange:handleFuncionarioChange,required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Seleccionar Funcionario\"}),funcionarios.map(funcionario=>/*#__PURE__*/_jsxs(\"option\",{value:funcionario.id,children:[funcionario.nombres,\" \",funcionario.apellidos]},funcionario.id))]}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:fechaDesde,onChange:e=>setFechaDesde(e.target.value),required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:fechaHasta,onChange:e=>setFechaHasta(e.target.value),required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Generar Reporte\"})]}),reportes.length>0&&/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Hora Entrada\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Hora Salida\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Cantidad de Horas Trabajadas\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:reportes.map(registro=>/*#__PURE__*/_jsxs(\"tr\",{children:[\" \",/*#__PURE__*/_jsx(\"td\",{children:registro.horaEntrada}),/*#__PURE__*/_jsx(\"td\",{children:registro.horaSalida}),/*#__PURE__*/_jsx(\"td\",{children:calcularHorasTrabajadas(registro.horaEntrada,registro.horaSalida)})]},registro._id))})]})]});};export default Reportes;","map":{"version":3,"names":["React","useEffect","useState","axios","jsx","_jsx","jsxs","_jsxs","Reportes","funcionarios","setFuncionarios","selectedFuncionario","setSelectedFuncionario","fechaDesde","setFechaDesde","fechaHasta","setFechaHasta","reportes","setReportes","error","setError","successMessage","setSuccessMessage","fetchFuncionarios","response","get","data","console","handleSubmit","e","preventDefault","desde","Date","hasta","fechaDesdeISO","setHours","toISOString","fechaHastaISO","getFullYear","getMonth","getDate","log","params","calcularHorasTrabajadas","horaEntrada","horaSalida","entrada","salida","diff","toFixed","handleFuncionarioChange","target","value","className","children","style","color","onSubmit","onChange","required","map","funcionario","id","nombres","apellidos","type","length","registro","_id"],"sources":["C:/Users/Ruben Torres/RiderProjects/RRHH_System/src/Reportes.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './components/App.css';\r\n\r\nconst Reportes = () => {\r\n    const [funcionarios, setFuncionarios] = useState([]);\r\n    const [selectedFuncionario, setSelectedFuncionario] = useState('');\r\n    const [fechaDesde, setFechaDesde] = useState('');\r\n    const [fechaHasta, setFechaHasta] = useState('');\r\n    const [reportes, setReportes] = useState([]);\r\n    const [error, setError] = useState('');\r\n    const [successMessage, setSuccessMessage] = useState('');\r\n\r\n    useEffect(() => {\r\n        const fetchFuncionarios = async () => {\r\n            try {\r\n                const response = await axios.get('/api/funcionarios');\r\n                setFuncionarios(response.data);\r\n            } catch (error) {\r\n                console.error(\"Error al obtener los funcionarios:\", error);\r\n                setError('Error al obtener los funcionarios.');\r\n            }\r\n        };\r\n        fetchFuncionarios();\r\n    }, []);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setError(''); // Limpiar mensaje de error\r\n        setSuccessMessage(''); // Limpiar mensaje de éxito\r\n\r\n        // Limpiar los reportes anteriores\r\n        setReportes([]);\r\n\r\n        if (!selectedFuncionario || !fechaDesde || !fechaHasta) {\r\n            setError('Todos los campos son obligatorios.');\r\n            return;\r\n        }\r\n\r\n        // Convertir las fechas a objetos Date\r\n        const desde = new Date(fechaDesde);\r\n        const hasta = new Date(fechaHasta);\r\n\r\n        // Asegúrate de que las fechas no se inviertan\r\n        if (desde > hasta) {\r\n            setError('La fecha \"desde\" debe ser anterior a la fecha \"hasta\".');\r\n            return;\r\n        }\r\n\r\n        // Ajustar las fechas para la consulta\r\n        const fechaDesdeISO = new Date(desde.setHours(0, 0, 0, 0)).toISOString(); // Iniciar el día\r\n        const fechaHastaISO = new Date(hasta.getFullYear(), hasta.getMonth(), hasta.getDate(), 23, 59, 59, 999).toISOString(); // Terminar el día\r\n\r\n        console.log(\"Fecha desde:\", fechaDesdeISO); // Para depuración\r\n        console.log(\"Fecha hasta:\", fechaHastaISO); // Para depuración\r\n\r\n        try {\r\n            const response = await axios.get(`/api/reportes/${selectedFuncionario}`, {\r\n                params: {\r\n                    desde: fechaDesdeISO,\r\n                    hasta: fechaHastaISO\r\n                }\r\n            });\r\n            setReportes(response.data);\r\n            setSuccessMessage('Reporte generado exitosamente.'); // Establecer mensaje de éxito\r\n        } catch (error) {\r\n            console.error(\"Error obteniendo reportes:\", error);\r\n            // Captura el mensaje de error del backend\r\n            if (error.response && error.response.data) {\r\n                setError(error.response.data); // Mostrar el mensaje de error proporcionado por el backend\r\n            } else {\r\n                setError('Error al obtener los reportes.'); // Mensaje genérico en caso de error inesperado\r\n            }\r\n        }\r\n    };\r\n\r\n    const calcularHorasTrabajadas = (horaEntrada, horaSalida) => {\r\n        const entrada = new Date(`1970-01-01T${horaEntrada}Z`);\r\n        const salida = new Date(`1970-01-01T${horaSalida}Z`);\r\n        const diff = (salida - entrada) / 1000 / 3600; // Diferencia en horas\r\n        return diff > 0 ? diff.toFixed(2) : 0; // Retornar horas trabajadas\r\n    };\r\n\r\n    const handleFuncionarioChange = (e) => {\r\n        setSelectedFuncionario(e.target.value);\r\n        setError(''); // Limpiar mensaje de error al seleccionar un funcionario\r\n        setSuccessMessage(''); // Limpiar mensaje de éxito al seleccionar un funcionario\r\n        setReportes([]); // Limpiar reportes al seleccionar un funcionario\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\"> {/* Agrega la clase container aquí */}\r\n            <h2>Reportes de Entrada y Salida</h2>\r\n            {error && <p style={{ color: 'red' }}>{error}</p>} {/* Mensaje de error */}\r\n            {successMessage && <p style={{ color: 'green' }}>{successMessage}</p>} {/* Mensaje de éxito */}\r\n            <form onSubmit={handleSubmit}>\r\n                <select value={selectedFuncionario} onChange={handleFuncionarioChange} required>\r\n                    <option value=\"\">Seleccionar Funcionario</option>\r\n                    {funcionarios.map(funcionario => (\r\n                        <option key={funcionario.id} value={funcionario.id}>\r\n                            {funcionario.nombres} {funcionario.apellidos}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n                <input\r\n                    type=\"date\"\r\n                    value={fechaDesde}\r\n                    onChange={e => setFechaDesde(e.target.value)}\r\n                    required\r\n                />\r\n                <input\r\n                    type=\"date\"\r\n                    value={fechaHasta}\r\n                    onChange={e => setFechaHasta(e.target.value)}\r\n                    required\r\n                />\r\n                <button type=\"submit\">Generar Reporte</button>\r\n            </form>\r\n\r\n            {reportes.length > 0 && (\r\n                <table>\r\n                    <thead>\r\n                    <tr>\r\n                        <th>Hora Entrada</th>\r\n                        <th>Hora Salida</th>\r\n                        <th>Cantidad de Horas Trabajadas</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {reportes.map((registro) => (\r\n                        <tr key={registro._id}> {/* Cambié 'id' por '_id' para reflejar la estructura de MongoDB */}\r\n                            <td>{registro.horaEntrada}</td>\r\n                            <td>{registro.horaSalida}</td>\r\n                            <td>{calcularHorasTrabajadas(registro.horaEntrada, registro.horaSalida)}</td>\r\n                        </tr>\r\n                    ))}\r\n                    </tbody>\r\n                </table>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Reportes;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import React,{useEffect,useState}from'react';import axios from'axios';import'./components/App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const EditarFuncionario=()=>{var _funcionario$fechaNac;const[funcionario,setFuncionario]=useState(null);const[id,setId]=useState('');const[funcionarios,setFuncionarios]=useState([]);// Estado para los funcionarios\n// Función para obtener todos los funcionarios\nconst fetchFuncionarios=async()=>{try{const response=await axios.get('/api/funcionarios');setFuncionarios(response.data);}catch(error){console.error(\"Error al obtener los funcionarios:\",error);}};// Obtener funcionarios al cargar el componente\nuseEffect(()=>{fetchFuncionarios();},[]);const fetchFuncionario=async()=>{if(id){try{const response=await axios.get(`/api/funcionarios/${id}`);setFuncionario(response.data);}catch(error){console.error(\"Error al obtener el funcionario:\",error);setFuncionario(null);// Resetear funcionario si hay error\n}}};const handleSearch=e=>{e.preventDefault();fetchFuncionario();// Llama a la función para buscar el funcionario\n};const handleIdChange=e=>{setId(e.target.value);// Actualiza el ID\nsetFuncionario(null);// Resetea los datos del funcionario al seleccionar un nuevo ID\n};const handleSubmit=async e=>{e.preventDefault();try{await axios.put(`/api/funcionarios/${id}`,funcionario);// Manejar la redirección o mostrar un mensaje de éxito\nalert('Funcionario actualizado exitosamente.');// Ejemplo de mensaje de éxito\n}catch(error){console.error(\"Error al actualizar el funcionario:\",error);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Editar Funcionario\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSearch,children:[/*#__PURE__*/_jsxs(\"select\",{value:id,onChange:handleIdChange,required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Seleccionar Funcionario\"}),funcionarios.map(funcionario=>/*#__PURE__*/_jsxs(\"option\",{value:funcionario.id,children:[funcionario.nombres,\" \",funcionario.apellidos,\" (ID: \",funcionario.id,\")\"]},funcionario.id))]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Buscar Funcionario\"})]}),funcionario&&/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{value:funcionario.nombres,onChange:e=>setFuncionario({...funcionario,nombres:e.target.value}),placeholder:\"Nombres\"}),/*#__PURE__*/_jsx(\"input\",{value:funcionario.apellidos,onChange:e=>setFuncionario({...funcionario,apellidos:e.target.value}),placeholder:\"Apellidos\"}),/*#__PURE__*/_jsx(\"input\",{value:funcionario.cedula,onChange:e=>setFuncionario({...funcionario,cedula:e.target.value}),placeholder:\"C\\xE9dula\"}),/*#__PURE__*/_jsx(\"input\",{value:((_funcionario$fechaNac=funcionario.fechaNacimiento)===null||_funcionario$fechaNac===void 0?void 0:_funcionario$fechaNac.substring(0,10))||''// Cargar la fecha correctamente\n,onChange:e=>setFuncionario({...funcionario,fechaNacimiento:e.target.value}),type:\"date\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Actualizar\"})]})]});};export default EditarFuncionario;","map":{"version":3,"names":["React","useEffect","useState","axios","jsx","_jsx","jsxs","_jsxs","EditarFuncionario","_funcionario$fechaNac","funcionario","setFuncionario","id","setId","funcionarios","setFuncionarios","fetchFuncionarios","response","get","data","error","console","fetchFuncionario","handleSearch","e","preventDefault","handleIdChange","target","value","handleSubmit","put","alert","className","children","onSubmit","onChange","required","map","nombres","apellidos","type","placeholder","cedula","fechaNacimiento","substring"],"sources":["C:/Users/Ruben Torres/RiderProjects/RRHH_System/src/EditarFuncionario.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './components/App.css';\r\n\r\nconst EditarFuncionario = () => {\r\n    const [funcionario, setFuncionario] = useState(null);\r\n    const [id, setId] = useState('');\r\n    const [funcionarios, setFuncionarios] = useState([]); // Estado para los funcionarios\r\n\r\n    // Función para obtener todos los funcionarios\r\n    const fetchFuncionarios = async () => {\r\n        try {\r\n            const response = await axios.get('/api/funcionarios');\r\n            setFuncionarios(response.data);\r\n        } catch (error) {\r\n            console.error(\"Error al obtener los funcionarios:\", error);\r\n        }\r\n    };\r\n\r\n    // Obtener funcionarios al cargar el componente\r\n    useEffect(() => {\r\n        fetchFuncionarios();\r\n    }, []);\r\n\r\n    const fetchFuncionario = async () => {\r\n        if (id) {\r\n            try {\r\n                const response = await axios.get(`/api/funcionarios/${id}`);\r\n                setFuncionario(response.data);\r\n            } catch (error) {\r\n                console.error(\"Error al obtener el funcionario:\", error);\r\n                setFuncionario(null); // Resetear funcionario si hay error\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleSearch = (e) => {\r\n        e.preventDefault();\r\n        fetchFuncionario(); // Llama a la función para buscar el funcionario\r\n    };\r\n\r\n    const handleIdChange = (e) => {\r\n        setId(e.target.value); // Actualiza el ID\r\n        setFuncionario(null); // Resetea los datos del funcionario al seleccionar un nuevo ID\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            await axios.put(`/api/funcionarios/${id}`, funcionario);\r\n            // Manejar la redirección o mostrar un mensaje de éxito\r\n            alert('Funcionario actualizado exitosamente.'); // Ejemplo de mensaje de éxito\r\n        } catch (error) {\r\n            console.error(\"Error al actualizar el funcionario:\", error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h2>Editar Funcionario</h2>\r\n            <form onSubmit={handleSearch}>\r\n                <select value={id} onChange={handleIdChange} required>\r\n                    <option value=\"\">Seleccionar Funcionario</option>\r\n                    {funcionarios.map(funcionario => (\r\n                        <option key={funcionario.id} value={funcionario.id}>\r\n                            {funcionario.nombres} {funcionario.apellidos} (ID: {funcionario.id})\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n                <button type=\"submit\">Buscar Funcionario</button>\r\n            </form>\r\n\r\n            {funcionario && (\r\n                <form onSubmit={handleSubmit}>\r\n                    <input\r\n                        value={funcionario.nombres}\r\n                        onChange={(e) => setFuncionario({ ...funcionario, nombres: e.target.value })}\r\n                        placeholder=\"Nombres\"\r\n                    />\r\n                    <input\r\n                        value={funcionario.apellidos}\r\n                        onChange={(e) => setFuncionario({ ...funcionario, apellidos: e.target.value })}\r\n                        placeholder=\"Apellidos\"\r\n                    />\r\n                    <input\r\n                        value={funcionario.cedula}\r\n                        onChange={(e) => setFuncionario({ ...funcionario, cedula: e.target.value })}\r\n                        placeholder=\"Cédula\"\r\n                    />\r\n                    <input\r\n                        value={funcionario.fechaNacimiento?.substring(0, 10) || ''} // Cargar la fecha correctamente\r\n                        onChange={(e) => setFuncionario({ ...funcionario, fechaNacimiento: e.target.value })}\r\n                        type=\"date\"\r\n                    />\r\n                    <button type=\"submit\">Actualizar</button>\r\n                </form>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditarFuncionario;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}